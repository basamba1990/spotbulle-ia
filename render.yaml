services:
  # Service principal avec frontend et backend int√©gr√©s
  - type: web
    name: spotbulle-ia
    env: node
    plan: starter
    buildCommand: |
      # Afficher les informations de l'environnement
      echo "üîß Node version: $(node --version)"
      echo "üîß NPM version: $(npm --version)"
      echo "üîß Environment: $NODE_ENV"
      
      # Nettoyer compl√®tement les caches et d√©pendances
      echo "üßπ Nettoyage des caches..."
      rm -rf node_modules package-lock.json
      rm -rf backend/node_modules backend/package-lock.json
      rm -rf frontend/node_modules frontend/package-lock.json frontend/.next frontend/out
      npm cache clean --force
      
      # Configurer les variables d'environnement pour le build
      export NODE_ENV=production
      export NEXT_PUBLIC_API_URL="https://spotbulle-ia.onrender.com"
      export NEXT_TELEMETRY_DISABLED=1
      export CI=true
      
      # Installer les d√©pendances du backend
      echo "üì¶ Installation des d√©pendances backend..."
      cd backend
      npm ci --only=production --no-audit --no-fund
      
      # Installer les d√©pendances du frontend avec les corrections
      echo "üì¶ Installation des d√©pendances frontend..."
      cd ../frontend
      
      # Ajouter les d√©pendances manquantes avant l'installation
      npm install --save critters@0.0.24 sharp@0.33.2
      npm ci --no-audit --no-fund
      
      # V√©rifier que les d√©pendances critiques sont install√©es
      echo "üîç V√©rification des d√©pendances critiques..."
      node -e "console.log('‚úÖ critters:', require('critters/package.json').version)"
      node -e "console.log('‚úÖ sharp:', require('sharp/package.json').version)"
      node -e "console.log('‚úÖ next:', require('next/package.json').version)"
      
      # Build du frontend Next.js avec gestion d'erreurs am√©lior√©e
      echo "üèóÔ∏è Build du frontend Next.js..."
      
      # Augmenter la m√©moire disponible pour Node.js
      export NODE_OPTIONS="--max-old-space-size=4096"
      
      # Lancer le build avec retry en cas d'√©chec
      npm run build || (
        echo "‚ùå Premier build √©chou√©, nettoyage et retry..."
        rm -rf .next
        npm run build || (
          echo "‚ùå Second build √©chou√©, affichage des logs d√©taill√©s..."
          npm run build --verbose || exit 1
        )
      )
      
      # V√©rifier que le build a r√©ussi
      if [ ! -d ".next" ]; then
        echo "‚ùå Le r√©pertoire .next n'existe pas apr√®s le build"
        exit 1
      fi
      
      if [ ! -f ".next/BUILD_ID" ]; then
        echo "‚ùå BUILD_ID manquant, le build Next.js a √©chou√©"
        exit 1
      fi
      
      echo "‚úÖ Build Next.js r√©ussi, BUILD_ID: $(cat .next/BUILD_ID)"
      
      # Copier les fichiers statiques vers le r√©pertoire public
      echo "üìÅ Copie des fichiers statiques..."
      mkdir -p ../public/static
      if [ -d ".next/static" ]; then
        cp -r .next/static/* ../public/static/ 2>/dev/null || echo "‚ö†Ô∏è Aucun fichier statique √† copier"
        echo "‚úÖ Fichiers statiques copi√©s"
      else
        echo "‚ö†Ô∏è R√©pertoire .next/static non trouv√©"
      fi
      
      # Retourner au r√©pertoire racine
      cd ..
      
      # Afficher un r√©sum√© du build
      echo "üìä R√©sum√© du build:"
      echo "  - Backend: $(ls -la backend/node_modules | wc -l) modules"
      echo "  - Frontend: $(ls -la frontend/node_modules | wc -l) modules"
      echo "  - Build Next.js: $(du -sh frontend/.next 2>/dev/null || echo 'N/A')"
      echo "  - Fichiers statiques: $(ls -la public/static 2>/dev/null | wc -l || echo '0') fichiers"
      
      echo "‚úÖ Build termin√© avec succ√®s"
      
    startCommand: |
      echo "üöÄ D√©marrage du serveur SpotBulle IA..."
      export NODE_ENV=production
      export PORT=10000
      export NODE_OPTIONS="--max-old-space-size=2048"
      
      # V√©rifier que les fichiers n√©cessaires existent
      if [ ! -f "backend/src/server-with-frontend.js" ]; then
        echo "‚ùå Fichier serveur manquant"
        exit 1
      fi
      
      if [ ! -d "frontend/.next" ]; then
        echo "‚ö†Ô∏è Build Next.js manquant, d√©marrage en mode d√©grad√©"
      fi
      
      # D√©marrer le serveur
      node backend/src/server-with-frontend.js
      
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        sync: false
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_EXPIRES_IN
        value: "7d"
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false
      - key: BUCKET_NAME
        value: "pitch-videos"
      - key: FRONTEND_URL
        value: "https://spotbulle-ia.onrender.com"
      - key: NEXT_PUBLIC_API_URL
        value: "https://spotbulle-ia.onrender.com"
      - key: NEXT_TELEMETRY_DISABLED
        value: "1"
      - key: OPENAI_API_KEY
        sync: false
        
    # Augmenter les ressources pour le build et l'ex√©cution
    disk: 2048  # 2GB de disque
    
    # Configuration des health checks
    healthCheckPath: /health
    
    # Configuration des domaines personnalis√©s (optionnel)
    # domains:
    #   - spotbulle-ia.com
    
    # Configuration des variables de build
    buildFilter:
      paths:
        - backend/**
        - frontend/**
        - render.yaml
      ignoredPaths:
        - "**/*.md"
        - "**/node_modules/**"
        - "**/.git/**"

databases:
  - name: spotbulle-ia-db
    plan: basic-256mb
    
# Configuration optionnelle pour les services additionnels
# redis:
#   - name: spotbulle-ia-redis
#     plan: starter

